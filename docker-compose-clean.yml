version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: orfeas-backend-production
    ports:
      - "5000:5000"
      - "8080:8080"
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - XFORMERS_DISABLED=1
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
        limits:
          memory: 20G
          cpus: "8"
    volumes:
      - ./models:/app/models:ro
      - ./outputs:/app/outputs
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    restart: unless-stopped
    networks:
      - orfeas-network
    healthcheck:
      test: [ "CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    image: nginx:alpine
    container_name: orfeas-frontend-production
    ports:
      - "8000:80"
      - "8443:443"
    volumes:
      - ./orfeas-studio.html:/usr/share/nginx/html/index.html:ro
      - ./service-worker.js:/usr/share/nginx/html/service-worker.js:ro
      - ./manifest.json:/usr/share/nginx/html/manifest.json:ro
      - ./icons:/usr/share/nginx/html/icons:ro
      - ./orfeas-3d-engine-hybrid.js:/usr/share/nginx/html/orfeas-3d-engine-hybrid.js:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./outputs:/usr/share/nginx/html/outputs:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - orfeas-network
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: orfeas-redis-production
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - orfeas-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: orfeas-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    restart: unless-stopped
    networks:
      - orfeas-network

  grafana:
    image: grafana/grafana:latest
    container_name: orfeas-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=orfeas_admin_2025
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./monitoring/grafana-dashboards/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
      - ./monitoring/grafana-dashboards/orfeas-dashboard.json:/etc/grafana/provisioning/dashboards/orfeas-dashboard.json:ro
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - orfeas-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: orfeas-node-exporter
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped
    networks:
      - orfeas-network

networks:
  orfeas-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
