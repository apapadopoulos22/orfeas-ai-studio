# ╔══════════════════════════════════════════════════════════════════════════════╗
# ║              THERION Testing Suite - pytest Configuration                    ║
# ╚══════════════════════════════════════════════════════════════════════════════╝

[pytest]
# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests - fast, isolated tests
    integration: Integration tests - test component interactions
    e2e: End-to-end tests - full workflow testing
    gpu: Tests requiring GPU - skip if no GPU available
    slow: Slow-running tests - skip in quick runs
    stress: GPU stress tests - intensive load testing

# Test output
addopts =
    -v
    --strict-markers
    --tb=short
    --disable-warnings
    -ra

# Coverage options
[coverage:run]
source = backend
omit =
    */tests/*
    */venv/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# Test timeouts (prevent hanging)
timeout = 300
timeout_method = thread

# Parallel execution
addopts = -n auto
