[pytest]
# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration (CRITICAL for E2E tests)
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Output options
addopts =
    -v
    --tb=short
    --strict-markers
    --color=yes
    --maxfail=5
    -ra

# Test markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (API tests, requires actual models)
    requires_models: Tests requiring Hunyuan3D models loaded
    security: Security tests
    performance: Performance tests (load testing)
    slow: Slow tests (skip with -m "not slow")
    gpu: Tests requiring GPU
    stress: GPU stress tests (intensive load)
    e2e: End-to-end tests (browser automation)

# Logging
log_cli = false
log_cli_level = INFO
log_file = tests/test_run.log
log_file_level = DEBUG

# Coverage options
[coverage:run]
source = .
omit =
    */tests/*
    */ARCHIVE/*
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
